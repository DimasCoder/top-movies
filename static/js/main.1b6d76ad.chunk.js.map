{"version":3,"sources":["assets/ezgif.com-gif-maker-copia-1.gif","components/Header/Header.js","components/MoviePage/MoviePage.js","components/Line/Line.js","components/MovieCard/MovieCard.js","components/TopMovies/TopMovies.js","App.js","reportWebVitals.js","index.js"],"names":["Header","props","useState","search","setSearch","className","to","src","logo","alt","value","onChange","e","target","type","placeholder","MoviePage","toYearFormat","date","split","isAdult","adult","genreList","genres","state","map","genre","location","genre_ids","includes","id","push","name","this","findAllMovies","axios","get","then","response","data","setState","isLoading","image","poster_path","title","release_date","vote_average","overview","Component","Line","MovieCard","movie","pathname","console","log","TopMovies","moviesToShow","length","App","searchRequest","movies","findedMovies","inputSearch","bind","prevProps","prevState","snapshot","findMovie","results","a","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"6XAAe,G,MAAA,IAA0B,yD,eCgC1BA,EA3BA,SAACC,GAEZ,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAMA,OACY,sBAAKC,UAAU,gBAAf,UACI,cAAC,IAAD,CAAMC,GAAI,eAAV,SACI,qBAAKC,IAAKC,EAAMC,IAAI,WAExB,sBAAKJ,UAAU,kBAAf,UACI,4CACA,sEAEJ,qBAAKA,UAAU,mBAAf,SACI,uBAAOA,UAAU,eACVK,MAAOP,EACPQ,SAhBN,SAACC,GAClBR,EAAUQ,EAAEC,OAAOH,OACnBT,EAAME,OAAOS,EAAEC,OAAOH,QAeCI,KAAK,OACLC,YAAY,qB,gCCqC5BC,E,kDA3DX,WAAYf,GAAQ,IAAD,8BACf,cAAMA,IAkBVgB,aAAe,SAACC,GACZ,OAAOA,EAAKC,MAAM,KAAK,IApBR,EAuBnBC,QAAU,SAACC,GACP,OAAiB,IAAVA,EAAiB,MAAQ,MAxBjB,EA4BnBC,UAAY,WACR,IAAIC,EAAS,GAMb,OALA,EAAKC,MAAMD,OAAOE,KAAI,SAACC,GAChB,EAAKzB,MAAM0B,SAASH,MAAMI,UAAUC,SAASH,EAAMI,KAClDP,EAAOQ,KAAK,IAAML,EAAMM,SAGzBT,EAAS,IAjChB,EAAKC,MAAQ,CACTD,OAAQ,IAHG,E,qDAOnB,WACIU,KAAKC,kB,2BAGT,WAAiB,IAAD,OACZC,IAAMC,IAAN,0FACKC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAACE,GACH,EAAKC,SAAS,CAACjB,OAAQgB,EAAKhB,OAAQkB,WAAW,S,oBAuB3D,WACI,IAAIC,EAAQ,kCAAoCT,KAAKhC,MAAM0B,SAASH,MAAMmB,YAC1E,OACQ,qBAAKtC,UAAU,aAAf,SACI,sBAAKA,UAAU,oBAAf,UACI,qBAAKE,IAAKmC,EAAOjC,IAAKwB,KAAKhC,MAAM0B,SAASH,MAAMoB,MAAQ,WACxD,sBAAKvC,UAAU,aAAf,UACI,6BAAK4B,KAAKhC,MAAM0B,SAASH,MAAMoB,QAC/B,wCAAU,+BAAOX,KAAKhB,aAAagB,KAAKhC,MAAM0B,SAASH,MAAMqB,mBAC7D,yCAAW,+BAAOZ,KAAKX,iBACvB,yCAAW,+BAAOW,KAAKb,QAAQa,KAAKhC,MAAM0B,SAASH,MAAMH,YACzD,0CAAY,+BAAOY,KAAKhC,MAAM0B,SAASH,MAAMsB,kBAC7C,6CACA,4BAAIb,KAAKhC,MAAM0B,SAASH,MAAMuB,uB,GApDlCC,aCGTC,G,MAJF,SAAAhD,GAAK,OACd,qBAAKI,UAAU,WCeJ6C,G,kKAbX,WACI,IAAIR,EAAQ,kCAAoCT,KAAKhC,MAAMkD,MAAMR,YACjE,OACI,eAAC,IAAD,CAAMrC,GAAI,CAAC8C,SAAS,UAAD,OAAWnB,KAAKhC,MAAMkD,MAAMrB,IAAMN,MAAMS,KAAKhC,MAAMkD,OAAQ9C,UAAU,aAAxF,UACKgD,QAAQC,IAAIrB,KAAKhC,MAAMkD,OACxB,qBAAK5C,IAAKmC,EAAOjC,IAAMwB,KAAKhC,MAAMkD,MAAMP,MAAQ,WAChD,6BAAKX,KAAKhC,MAAMkD,MAAMP,QACtB,wCAAU,+BAAOX,KAAKhC,MAAMkD,MAAML,yB,GAR1BE,cCiBTO,G,kKAjBX,WACI,OACI,gCACI,uHACA,qBAAKlD,UAAU,aAAf,SACwC,IAAnC4B,KAAKhC,MAAMuD,aAAaC,OAAexB,KAAKhC,MAAMuD,aAAa/B,KAAI,SAAC0B,GAAD,OAC5D,cAAC,EAAD,CAA0BA,MAAOA,GAAjBA,EAAMrB,OAG1B,wG,GAVAkB,cCwETU,E,kDAhEX,WAAYzD,GAAQ,IAAD,8BACf,cAAMA,IACDuB,MAAQ,CACTmC,cAAe,GACfC,OAAQ,GACRC,aAAc,IAElB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPJ,E,qDAYnB,WACI9B,KAAKC,kB,gCAIT,SAAmB8B,EAAWC,EAAWC,GACrCjC,KAAKkC,c,2BAIT,WAAiB,IAAD,OACZhC,IAAMC,IAAN,+GACKC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAACE,GACH,EAAKC,SAAS,CAACoB,OAAQrB,EAAK6B,QAAS3B,WAAW,S,8DAI5D,iCAAA4B,EAAA,sEACUlC,IAAMC,IAAN,kHAAqHH,KAAKT,MAAMmC,cAAhI,gCACDtB,MAAK,SAAAC,GAAQ,OAAIA,EAASC,QAC1BF,MAAK,SAACE,GACH,EAAKC,SAAS,CAACqB,aAActB,EAAK6B,QAAS3B,WAAW,OAJlE,gD,+EAQA,SAAY7B,GACRqB,KAAKO,SAAS,CAACmB,cAAe/C,M,oBAGlC,WACI,MAA8CqB,KAAKT,MAA5CoC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,aACXL,EAAiC,KADrC,EAA6BG,cACaE,EAAeD,EACzD,OACQ,qBAAKvD,UAAU,YAAf,SACI,qBAAKA,UAAU,UAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,eAAC,IAAD,WACI,cAAC,EAAD,CAAQF,OAAQ8B,KAAK6B,cACrB,cAAC,EAAD,IACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOQ,OAAK,EAACC,KAAM,CAAC,eAAgB,KAAMC,OAAQ,kBAAM,cAAC,EAAD,CAAWhB,aAAcA,OACjF,cAAC,IAAD,CAAOc,OAAK,EAACC,KAAK,cAAcC,OAAQ,SAACvE,GAAD,OAAW,cAAC,EAAD,eAAeA,uB,GAvDpF+C,aCCHyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtC,MAAK,YAAkD,IAA/CuC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAST,OACP,cAAC,IAAMU,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.1b6d76ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ezgif.com-gif-maker-copia-1.026730f3.gif\";","import React, {useState} from 'react'\nimport './Header.css'\nimport logo from '../../assets/ezgif.com-gif-maker-copia-1.gif'\nimport {Link} from \"react-router-dom\";\n\nconst Header = (props) => {\n\n    const [search, setSearch] = useState('')\n\n    const handleChange = (e) =>{\n        setSearch(e.target.value);\n        props.search(e.target.value);\n    }\n    return (\n                <div className=\"header__inner\">\n                    <Link to={\"/top-movies/\"}>\n                        <img src={logo} alt=\"Logo\"/>\n                    </Link>\n                    <div className=\"brand-container\">\n                        <h1>Top movies</h1>\n                        <p>The best movies only on Top movies</p>\n                    </div>\n                    <div className=\"search-container\">\n                        <input className=\"input-search\"\n                               value={search}\n                               onChange={handleChange}\n                               type=\"text\"\n                               placeholder=\"Search....\"/>\n                    </div>\n                </div>\n    )\n}\nexport default Header","import React, {Component} from 'react';\nimport './MoviePage.css'\nimport axios from \"axios\";\n\nclass MoviePage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            genres: []\n        }\n    }\n\n    componentDidMount() {\n        this.findAllMovies();\n    }\n\n    findAllMovies() {\n        axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=cd7f2e1e69891f18b37b1203b8add2b6`)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({genres: data.genres, isLoading: false})\n            });\n    }\n\n    toYearFormat = (date) => {\n        return date.split('-')[0]\n    }\n\n    isAdult = (adult) => {\n        return adult === true ? \"Yes\" : \"No\"\n    }\n\n\n    genreList = () => {\n        let genres = []\n        this.state.genres.map((genre) => {\n            if(this.props.location.state.genre_ids.includes(genre.id)){\n                genres.push(\" \" + genre.name)\n            }\n        })\n        return genres + \"\"\n    }\n\n    render() {\n        let image = \"https://image.tmdb.org/t/p/w185\" + this.props.location.state.poster_path;\n        return (\n                <div className=\"movie-page\">\n                    <div className=\"movie-page__inner\">\n                        <img src={image} alt={this.props.location.state.title + \" image\"}/>\n                        <div className=\"movie-info\">\n                            <h3>{this.props.location.state.title}</h3>\n                            <h4>Year: <span>{this.toYearFormat(this.props.location.state.release_date)}</span></h4>\n                            <h4>Genre: <span>{this.genreList()}</span></h4>\n                            <h4>Adult: <span>{this.isAdult(this.props.location.state.adult)}</span></h4>\n                            <h4>Rating: <span>{this.props.location.state.vote_average}</span></h4>\n                            <span>Overview:</span>\n                            <p>{this.props.location.state.overview}</p>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default MoviePage;","import React from 'react';\nimport './Line.css'\n\nconst Line = props => (\n    <div className=\"line\"></div>\n)\n\nexport default Line;","import React, {Component} from 'react';\nimport './MovieCard.css'\nimport {Link} from \"react-router-dom\";\n\n\nclass MovieCard extends Component {\n    render() {\n        let image = \"https://image.tmdb.org/t/p/w185\" + this.props.movie.poster_path;\n        return (\n            <Link to={{pathname:`/movie/${this.props.movie.id}`, state:this.props.movie}} className=\"movie-card\">\n                {console.log(this.props.movie)}\n                <img src={image} alt={ this.props.movie.title + \" image\"}/>\n                <h3>{this.props.movie.title}</h3>\n                <p>Rating <span>{this.props.movie.vote_average}</span></p>\n            </Link>\n        );\n    }\n}\n\nexport default MovieCard;","import React, {Component} from 'react';\nimport MovieCard from \"../MovieCard/MovieCard\";\nimport './TopMovies.css'\n\nclass TopMovies extends Component {\n    render() {\n        return (\n            <div>\n                <h2>Найкращі фільми</h2>\n                <div className=\"movie-list\">\n                    {this.props.moviesToShow.length !== 0 ? this.props.moviesToShow.map((movie) => (\n                            <MovieCard key={movie.id} movie={movie}/>\n                        ))\n                        :\n                        <h4>Не знайдено</h4>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TopMovies;","import React from 'react'\nimport './App.css';\nimport Header from './components/Header/Header';\nimport {Component} from \"react\";\nimport {HashRouter as Router, Route, Switch} from \"react-router-dom\";\nimport MoviePage from \"./components/MoviePage/MoviePage\";\nimport Line from \"./components/Line/Line\";\nimport TopMovies from \"./components/TopMovies/TopMovies\";\nimport axios from \"axios\";\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            searchRequest: '',\n            movies: [],\n            findedMovies: [],\n        }\n        this.inputSearch = this.inputSearch.bind(this);\n\n    }\n\n\n    componentDidMount() {\n        this.findAllMovies();\n\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        this.findMovie();\n\n    }\n\n    findAllMovies() {\n        axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=cd7f2e1e69891f18b37b1203b8add2b6&language=en-US&page=1`)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({movies: data.results, isLoading: false})\n            });\n    }\n\n    async findMovie() {\n        await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=cd7f2e1e69891f18b37b1203b8add2b6&language=en-US&query=${this.state.searchRequest}&page=1&include_adult=false`)\n            .then(response => response.data)\n            .then((data) => {\n                this.setState({findedMovies: data.results, isLoading: false})\n            });\n    }\n\n    inputSearch(e) {\n        this.setState({searchRequest: e})\n    }\n\n    render() {\n        const {movies, findedMovies, searchRequest} = this.state;\n        let moviesToShow = searchRequest !== '' ? findedMovies : movies;\n        return (\n                <div className=\"container\">\n                    <div className=\"content\">\n                        <div className=\"content__inner\">\n                            <Router>\n                                <Header search={this.inputSearch}/>\n                                <Line/>\n                                <Switch>\n                                    <Route exact path={[\"/top-movies/\", \"/\"]} render={() => <TopMovies moviesToShow={moviesToShow}/>}/>\n                                    <Route exact path=\"/movie/:id/\" render={(props) => <MoviePage {...props}/>}/>\n                                </Switch>\n                            </Router>\n                        </div>\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}